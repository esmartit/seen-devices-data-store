# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: docker/login-action@v1
        name: Login to Docker Hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'zulu'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Create release with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: releaseVersion
      - name: Print version with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: printVersion
      - name: Push to docker with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jib
      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: Test report
          path: build/reports/tests/test
      - name: Commit release
        run: |
          git config --global push.followTags true
          git config --global user.name 'ci_esmartit'
          git config --global user.email 'ci@esmartit.es'
          git status
          git push
