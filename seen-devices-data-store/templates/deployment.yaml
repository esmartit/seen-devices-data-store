apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seen-devices-data-store.fullname" . }}
  labels:
    {{- include "seen-devices-data-store.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "seen-devices-data-store.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port:  "9000"
      labels:
        {{- include "seen-devices-data-store.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "seen-devices-data-store.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "PROCESS_EVENTS_ENABLED"
              value: {{ .Values.app.eventStore.processEvents.enabled | quote }}
            - name: "PROCESS_EVENTS_INITIAL_DELAY"
              value: {{ .Values.app.eventStore.processEvents.initialDelay | quote }}
            - name: "PROCESS_EVENTS_FIXED_DELAY"
              value: {{ .Values.app.eventStore.processEvents.fixedDelay | quote }}
            - name: "PROCESS_EVENTS_LOCK_AT_MOST"
              value: {{ .Values.app.eventStore.processEvents.lockAtMostFor }}
            - name: "PROCESS_EVENTS_LOCK_AT_LEAST"
              value: {{ .Values.app.eventStore.processEvents.lockAtLeastFor }}
            - name: "PROCESS_EVENTS_BATCH_SIZE"
              value: {{ .Values.app.eventStore.processEvents.batchSize | quote }}
            - name: "DELETED_EVENTS_ENABLED"
              value: {{ .Values.app.eventStore.deleteProcessed.enabled | quote }}
            - name: "DELETE_EVENTS_INITIAL_DELAY"
              value: {{ .Values.app.eventStore.deleteProcessed.initialDelay | quote }}
            - name: "DELETE_EVENTS_FIXED_DELAY"
              value: {{ .Values.app.eventStore.deleteProcessed.fixedDelay | quote }}
            - name: "DELETE_EVENTS_LOCK_AT_MOST"
              value: {{ .Values.app.eventStore.deleteProcessed.lockAtMostFor }}
            - name: "DELETE_EVENTS_LOCK_AT_LEAST"
              value: {{ .Values.app.eventStore.deleteProcessed.lockAtLeastFor | quote }}
            - name: "KAFKA_BROKER_HOST"
              value: {{ .Values.app.kafka.host }}
            - name: "MONGODB_HOST"
              value: {{ .Values.app.mongodb.host }}
            - name: "MONGODB_USER"
              value: {{ .Values.app.mongodb.user }}
            - name: "MONGODB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  mongodb-password
                  name: "{{ .Values.fullnameOverride }}-mongodb"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 90
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 90
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
